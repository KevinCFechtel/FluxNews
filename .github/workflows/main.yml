name: Build
on:
  push:
    branches:
      - TestWorkflow

jobs:
  build:
    name: Build & Release 
    runs-on: ubuntu-latest

    steps:
        #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
        
        #2 Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      
        #3 Get Flutter version from submodule 
      - name: Get Flutter version from submodule
        working-directory: vendor/flutter
        run: |
          bin/flutter --version
          flutter_version=$(bin/flutter --version | grep Flutter | cut -d ' '  -f 2)
          echo "FLUTTER_VERSION=$flutter_version" >> $GITHUB_ENV

        #4 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{ env.FLUTTER_VERSION }}

        #5 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get
          
        #6 Setup Keystore
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
          
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties
        
        #7 Building APK
      - name: Build APK
        run: flutter build apk --release --split-per-abi --dart-define=cronetHttpNoPlay=true && flutter build apk --release --dart-define=cronetHttpNoPlay=true

        #8 Upload Artifacts
      #- name: Upload Artifacts
      #  uses: actions/upload-artifact@v4
      #  with:
      #    path: build/app/outputs/flutter-apk/*

        #9 Extract Version
      #- name: Extract version and release from pubspec.yaml
      #  id: extract_version
      #  run: |
      #    version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r' | cut -d+ -f 1)
      #    echo "VERSION=$version" >> $GITHUB_ENV
      #    versioncode=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r' | cut -d+ -f 2)
      #    echo "VERSIONCODE=$versioncode" >> $GITHUB_ENV
        
        #10 Create Release
      #- name: Create Release
      #  uses: ncipollo/release-action@v1
      #  with:
      #    artifacts: "build/app/outputs/flutter-apk/*"
      #    tag: v${{ env.VERSION }}
      #    name: ${{ env.VERSION }}
      #    bodyFile: metadata/en-US/changelogs/${{ env.VERSIONCODE }}1.txt
      #    token: ${{ secrets.TOKEN }}